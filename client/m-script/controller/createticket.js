HRSupport.controller("CreateTicketCTRL", function (e, t, s, a, i, l) { e.UserDetails = JSON.parse(l.localStorage.getItem("UserDetails")), e.isEmpty = function (e) { return "string" == typeof e && !e.trim() || void 0 === e || null === e }, e.Msg = "", e.Selected = { IssueType: void 0, SubIssueType: void 0 }, e.GetAllIssueSubIssue = function () { t.getAllIssueSubIssue(e.UserDetails.Toket).success(function (t) { e.IssueSubIssue = t.data.length > 0 ? t.data[0] : [], e.isEmpty(i.IssueID) || e.isEmpty(i.SubIssueID) || (e.Selected.IssueType = { ISSUEID: parseInt(i.IssueID), SUBISSUEID: parseInt(i.SubIssueID) }) }) }, e.GetAllIssueSubIssue(), e.DeleteRow = function (t, s) { e.FileAttachments.splice(t, 1) }, e.ClickOkCancel = function (t) { 1 == t ? e.IsComments = !0 : 2 == t && (e.IsComments = !0, e.Selected.IssueType = void 0, e.Selected.SubIssueType = void 0) }, e.CheckMessage = function () { 4 == e.Selected.IssueType.ISSUEID ? e.IsComments = !1 : e.IsComments = !0 }, e.IsComments = !0, e.CreateTicket = function () { if (e.isEmpty(e.Selected.IssueType)) return alert("Please select issue type"), !1; if (e.isEmpty(e.Selected.SubIssueType)) return alert("Please select sub issue type"), !1; if (e.isEmpty(e.Comments) || e.Comments.length <= 10) return alert("Query should be more than 10 char"), !1; var s = { EmpID: e.UserDetails.EMPData[0].EmpID, IssueID: e.Selected.IssueType.ISSUEID, SubIssueID: e.Selected.SubIssueType.SUBISSUEID, TicketSubject: e.Selected.IssueType.ISSUENAME + "(" + e.Selected.SubIssueType.SUBISSUENAME + ")" + e.UserDetails.EMPData[0].EmployeeID, Comments: e.Comments, FileURL: "", FileName: "" }; e.FileAttachments.length > 0 ? t.UploadFile(e.FileAttachments, e.UserDetails.Toket).success(function (a) { console.log(a), e.FileAttachments = a, s.FileURL = e.FileAttachments[0].AttachmentURL, s.FileName = e.FileAttachments[0].FileName, t.CreateNewTicket(s, e.UserDetails.Toket).success(function (s) { var a = { CommunicationDetails: { LeadID: 0, Conversations: [{ From: "noreply-pbsupprt@policybazaar.com", ToReceipent: s.data[0][0].EmailID.split(","), BccEmail: ["asmit@policybazaar.com"], CCEmail: null, Body: "<html><body>Hi , <br/> A new ticket is raised by employee, request you to address it immediately. <br/><br/><br/><table border='1' style='border-collapse:collapse'>NaN" + e.UserDetails.EMPData[0].EmployeeID + "</td> </tr> <tr><td >Employee Name</td> <td >" + e.UserDetails.EMPData[0].Name + "</td> </tr> <tr><td >Ticket#</td>  <td >" + s.data[0][0].TicketDispID + "</td> </tr>  <tr><td >Issue</td><td >" + e.Selected.IssueType.ISSUENAME + "</td> </tr>  <tr><td >Concern</td><td >" + e.Comments + "</td> </tr></table><br/><a href='http://pbsupport.policybazaar.com/' target='_blank'>Click here to login</a></body></html>", Subject: "Ticket Service Request " + s.data[0][0].TicketDispID + ": " + e.Selected.IssueType.ISSUENAME, CreatedBy: "Asmit", MailAttachments: [], UserID: 124, AutoTemplate: !0 }], CommunicationType: 1 } }, i = [{ empid: s.data[0][0].AssignToCode, uid: s.data[0][0].AssignToCode, entID: s.data[0][0].TicketDispID, url: "http://pbsupportuat.policybazaar.com/home.html#/pbsupport/TicketDetails/" + s.data[0][0].TicketID, msg: "New ticket : " + s.data[0][0].TicketDispID, read: !1, type: 1, CBy: "124", Source: "PBSUPPORT" }]; t.AddNotification(i).success(function (e) { }), t.SendEmail(a).success(function (e) { }), alert("Ticket created successfully."), console.log("/home.html#/pbsupport/MyTicketDetails/" + s.data[0][0].TicketID), l.location.href = "/home.html#/pbsupport/MyTicketDetails/" + s.data[0][0].TicketID }) }) : t.CreateNewTicket(s, e.UserDetails.Toket).success(function (s) { var a = { CommunicationDetails: { LeadID: 0, Conversations: [{ From: "noreply-pbsupprt@policybazaar.com", ToReceipent: s.data[0][0].EmailID.split(","), BccEmail: ["asmit@policybazaar.com"], CCEmail: null, Body: "<html><body>Hi , <br/> A new ticket is raised by employee, request you to address it immediately. <br/><br/><br/><table border='1' style='border-collapse:collapse'><tr> <td >EmployeeID</td>  <td>" + e.UserDetails.EMPData[0].EmployeeID + "</td> </tr> <tr><td >Employee Name</td> <td >" + e.UserDetails.EMPData[0].Name + "</td> </tr> <tr><td >Ticket#</td>  <td >" + s.data[0][0].TicketDispID + "</td> </tr>  <tr><td >Issue</td><td >" + e.Selected.IssueType.ISSUENAME + "</td> </tr>  <tr><td >Concern</td><td >" + e.Comments + "</td> </tr></table><br/><a href='http://pbsupport.policybazaar.com/' target='_blank'>Click here to login</a></body></html>", Subject: "Ticket Service Request " + s.data[0][0].TicketDispID + ": " + e.Selected.IssueType.ISSUENAME, CreatedBy: "Asmit", MailAttachments: [], UserID: 124, AutoTemplate: !0 }], CommunicationType: 1 } }, i = [{ empid: s.data[0][0].AssignToCode, uid: s.data[0][0].AssignToCode, entID: s.data[0][0].TicketDispID, url: "http://pbsupportuat.policybazaar.com/home.html#/pbsupport/TicketDetails/" + s.data[0][0].TicketID, msg: "New ticket : " + s.data[0][0].TicketDispID, read: !1, type: 1, CBy: "124", Source: "PBSUPPORT" }]; t.AddNotification(i).success(function (e) { }), t.SendEmail(a).success(function (e) { }), alert("Ticket created successfully."), l.location.href = "/home.html#/pbsupport/MyTicketDetails/" + s.data[0][0].TicketID }) }, e.FileAttachments = [], e.file_changed = function (t) { e.FileAttachments = []; var s = []; e.$apply(function (a) { for (var i = 0, l = t.files.length, c = 0; c < t.files.length; c++) { var o = t.files[c], r = new FileReader, n = { FileName: o.name, AttachemntContent: "", AttachmentURL: "" }; s.push(n), r.onload = function (t) { t.target.readyState == FileReader.DONE && (s[i].AttachemntContent = btoa(t.target.result), s[i].FileName, ++i == l && (e.FileAttachments = s, e.$apply())) }, t.files.length > 0 && r.readAsBinaryString(o) } }) } });